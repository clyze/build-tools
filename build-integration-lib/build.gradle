plugins {
    id 'java-library'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "${artifactory_contextUrl}/plast-public" }
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

configurations {
    jcplugin
}

dependencies {
    api 'com.google.code.gson:gson:2.8.0'                          // Apache 2.0
    api 'org.zeroturnaround:zt-zip:1.13'                           // Apache 2.0
    compileOnly "org.codehaus.groovy:groovy:${groovyVersion}"
    compile('org.clyze:clue-client:4.1.13') {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
        exclude group: "org.codehaus.groovy", module: "groovy"
    }
    jcplugin jcpluginArtifact
}

compileJava {
    options.compilerArgs << '-Xlint:unchecked'
    options.compilerArgs << '-Xlint:deprecation'
}

// Communicate jcplugin dependency to code, to be inserted as a
// dependency on the target project.
task writeMetadataDependecy() {
    String JCPLUGIN_VERSION = 'src/main/resources/jcplugin.version'
    File f = project.file(JCPLUGIN_VERSION)
    delete f
    f.withWriterAppend { w -> w.writeLine(jcpluginArtifact) }
}
build.dependsOn writeMetadataDependecy

// Copy jcplugin to resource directory.
String jcpluginResourceDir = 'src/main/resources/jcplugin'
task copyJcPlugin(type: Copy) {
    from configurations.jcplugin
    into jcpluginResourceDir
}
[classes, build, jar].each { it.dependsOn(copyJcPlugin) }
task cleanJcPluginDir(type: Delete) {
    delete jcpluginResourceDir
}
clean.dependsOn cleanJcPluginDir
