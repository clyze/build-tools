plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id 'maven-publish'
    id 'net.researchgate.release' version '2.6.0'
}

group = 'org.clyze'

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

wrapper {
    gradleVersion = '5.4.1'
    distributionType = Wrapper.DistributionType.ALL
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "${artifactory_contextUrl}/plast-public" }
    maven {
        credentials {
            username artifactory_user
            password artifactory_password
        }
        url "${artifactory_contextUrl}/plast-private"
    }
}

configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
}

String jcpluginVersion = "org.clyze:doop-jcplugin:2.0.22"

dependencies {
    compile localGroovy(),
            "commons-cli:commons-cli:1.2"

    compile("org.clyze:clue-client:4.1.3") {
        exclude module: "groovy-all"
    }

    runtime(jcpluginVersion) {
        exclude module: "groovy-all"
    }

    runtime "org.codehaus.groovy:groovy-all:2.4.7"
}

gradlePlugin {
    plugins {
        doopPlugin {
            id = "org.clyze.doop-gradle-plugin"
            implementationClass = "org.clyze.doop.gradle.DoopPlugin"
        }
    }
}

// Communicate jcplugin dependency to the Gradle plugin code, to be
// inserted as a dependency on the target project.
task writeMetadataDependecy() {
    String JCPLUGIN_VERSION = 'src/main/resources/jcplugin.version'
    delete JCPLUGIN_VERSION
    (new File(JCPLUGIN_VERSION)).withWriterAppend { w -> w.writeLine(jcpluginVersion) }
}
build.dependsOn writeMetadataDependecy

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
if (project.hasProperty('artifactory_user')) {
publishing {
    repositories {
        maven {
            credentials {
                username artifactory_user
                password artifactory_password
            }

            url "${artifactory_contextUrl}/plugins-release-local"
        }
    }
}
}

release {
    //failOnUnversionedFiles = false
    //use the defaults, see https://github.com/researchgate/gradle-release
}

afterReleaseBuild.dependsOn publish
