plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id 'maven-publish'
    id 'net.researchgate.release' version '2.6.0'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "${artifactory_contextUrl}/plast-public" }
}

configurations.all {
    //This is required for SNAPSHOT dependencies
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    //This is required for dependencies using the "+" notation
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
}

// Prevent inclusion of gradle-api into shadow JAR. (See:
// https://imperceptiblethoughts.com/shadow/plugins/#special-handling-of-the-java-gradle-plugin-development-plugin)
configurations.compile.dependencies.remove dependencies.gradleApi()
// Similar exclusion of Groovy runtime (provided at Gradle runtime).
configurations.compile.dependencies.remove dependencies.localGroovy()

dependencies {
    // See: https://github.com/johnrengelman/shadow/issues/414
    compileOnly gradleApi()

    compileOnly localGroovy()
    implementation project(":build-integration-lib")
}

gradlePlugin {
    plugins {
        closerPlugin {
            id = "org.clyze.gradle-plugin"
            implementationClass = "org.clyze.build.tools.gradle.RepackagePlugin"
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    archiveClassifier.set('groovydoc')
    from groovydoc.destinationDir
}

jar {
    manifest {
        attributes 'Implementation-Version' : archiveVersion
    }
}

// Take care of race condition when generating the shadow JAR as main
// artifact (https://github.com/uber/NullAway/blob/master/nullaway/build.gradle).
shadowJar.dependsOn jar

shadowJar {
    // Set classifier to "null", to make the shadow JAR the main published artifact.
    classifier = null
}

artifacts {
    shadowJar
    archives sourcesJar
    archives groovydocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) { publication ->
            artifact shadowJar
        }
    }
}

// The pom created when publishing the shadow JAR is wrong: it still contains
// dependencies to be resolved (including the non-published shared library
// subproject). Thus, we delete these dependencies here.
shadowJar.doLast {
    tasks.findAll { it instanceof org.gradle.api.publish.maven.tasks.AbstractPublishToMaven }.each {
        it.publication.pom.withXml {
            asNode().dependencies.dependency.each { it.parent().remove(it) }
        }
    }
}

if (project.hasProperty('artifactory_user')) {
publishing {
    repositories {
        maven {
            credentials {
                username artifactory_user
                password artifactory_password
            }

            url "${artifactory_contextUrl}/plugins-release-local"
        }
    }
}
}

release {
    //failOnUnversionedFiles = false
    //use the defaults, see https://github.com/researchgate/gradle-release
}

afterReleaseBuild.dependsOn publish
