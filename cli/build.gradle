plugins {
    id 'application'
    id 'java-library'
    id 'maven-publish'
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://clyze.jfrog.io/artifactory/default-maven-local' }
    maven {
        url "http://centauri.di.uoa.gr:8081/artifactory/plast-public"
        allowInsecureProtocol true
    }
}

dependencies {
    implementation 'commons-cli:commons-cli:1.5.0'      // Apache 2.0
    implementation 'org.apache.ant:ant:1.10.11'        // Apache 2.0
    implementation 'org.apache.maven:maven-model:3.8.3' // Apache 2.0

    implementation project(":build-integration-lib")
    implementation "org.codehaus.groovy:groovy:${groovyVersion}"
}

String mainClass = 'com.clyze.build.tools.cli.Main'

application {
    mainClassName = mainClass
}

compileJava {
    options.compilerArgs << '-Xlint:unchecked'
    options.compilerArgs << '-Xlint:deprecation'
}

java {
    withSourcesJar()
    withJavadocJar()
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

task fatjar(type: Jar) {
    manifest {
        attributes 'Main-Class': mainClass,
                   'Implementation-Version': project.version
    }
    archiveBaseName.set(project.name + '-all')
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

/**
 * Checks for dependencies that may come from mavenLocal and can harm
 * build reproducibility (e.g. for releases).
 */
project.afterEvaluate {
    configurations.default
            .collect { it.canonicalPath }
            .findAll { it.contains('.m2') }
            .each { println "WARNING: build may be using mavenLocal(): ${it}" }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifacts = [fatjar, sourcesJar, javadocJar]
        }
    }
}
